# PostgreSQL Testing Configuration - Generated on 2025-08-24 22:20:03
# WARNING: This file contains sensitive information. Delete after testing.

# Cluster Information
CLUSTER_NAME=reports-server-test-20250824-222003
AWS_REGION=us-west-1
AWS_PROFILE=devtest-sso

# RDS Database Information
RDS_INSTANCE_ID=reports-server-db-20250824-222003
RDS_ENDPOINT=reports-server-db-20250824-222003.cgfhp1exibuy.us-west-1.rds.amazonaws.com
DB_NAME=reportsdb
DB_USERNAME=reportsuser
DB_PASSWORD=c6d9d25bf71b42b6b7e62c0e947263c54ef534013c9cdb5ff9b517995ac81ea0

# Timestamp
TIMESTAMP=20250824-222003

# Status: SETUP COMPLETE âœ…
# - EKS Cluster: ACTIVE with 2 nodes
# - RDS Database: Available
# - Kyverno: Installed with Reports Controller
# - Reports Server: Running and connected to PostgreSQL
# - Monitoring Stack: Prometheus + Grafana installed
# - Baseline Policies: Applied and working
# - Policy Reports: Being generated and stored

# Database Connection Commands
# Connect & List Tables:
# PGPASSWORD="c6d9d25bf71b42b6b7e62c0e947263c54ef534013c9cdb5ff9b517995ac81ea0" psql -h "reports-server-db-20250824-222003.cgfhp1exibuy.us-west-1.rds.amazonaws.com" -U reportsuser -d reportsdb -c "\dt"

# Count Total Reports:
# PGPASSWORD="c6d9d25bf71b42b6b7e62c0e947263c54ef534013c9cdb5ff9b517995ac81ea0" psql -h "reports-server-db-20250824-222003.cgfhp1exibuy.us-west-1.rds.amazonaws.com" -U reportsuser -d reportsdb -c "SELECT COUNT(*) as total_policy_reports FROM policyreports;"

# View Recent Reports:
# PGPASSWORD="c6d9d25bf71b42b6b7e62c0e947263c54ef534013c9cdb5ff9b517995ac81ea0" psql -h "reports-server-db-20250824-222003.cgfhp1exibuy.us-west-1.rds.amazonaws.com" -U reportsuser -d reportsdb -c "SELECT name, namespace, report->>'summary' as summary FROM policyreports ORDER BY name DESC LIMIT 5;"

# Access Information
# Grafana Dashboard:
# kubectl -n monitoring port-forward svc/monitoring-grafana 3000:80
# Password: $(kubectl -n monitoring get secret monitoring-grafana -o jsonpath='{.data.admin-password}' | base64 -d)

# Next Steps:
# 1. Test database queries to see policy reports
# 2. Access Grafana dashboard for monitoring
# 3. Create additional test resources to generate more reports
# 4. When done: ./phase1-cleanup.sh
